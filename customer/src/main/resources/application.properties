server.port=${CUSTOMER_SERVICE_PORT:8080}
#DB:mock|postgres
db.type=${CUSTOMER_DB_TYPE:postgres}
#postgres
db.postgres.url=${PG_URL:jdbc:postgresql://${CUSTOMER_PG_HOST:localhost}:${CUSTOMER_PG_PORT:5432}/omul?currentSchema=${CUSTOMER_PG_SCHEMA:customer}}
db.postgres.username=${CUSTOMER_PG_USER:customer}
db.postgres.password=${CUSTOMER_PG_PASS:customer}
db.postgres.schema=${CUSTOMER_PG_SCHEMA:customer}
#flyway
spring.flyway.baselineOnMigrate=true
spring.flyway.locations=db/migration/${db.type}
#spring-doc
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.show-actuator=true
#security
security.enabled=${CUSTOMER_JWT_ENABLED:true}
security.signing.key=${CUSTOMER_JWT_SIGNING_KEY:oRuNpRUHPBjfYuWYlaaKtm/YTmF9IOMwVJFlIfNPuls=}
#cache (provider inner|redis)
cache.global.enabled=${CUSTOMER_CACHE_ENABLED:true}
cache.global.provider=${CUSTOMER_CACHE_PROVIDER:inner}
spring.data.redis.host=${CUSTOMER_CACHE_HOST:localhost}
spring.data.redis.port=${CUSTOMER_CACHE_PORT:6379}
#management
management.endpoint.env.show-values=ALWAYS
management.health.redis.enabled=false
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=health,prometheus,metrics,env
management.endpoints.web.base-path=/actuator
management.endpoint.metrics.enabled=true
management.metrics.use-global-registry=false
management.defaults.metrics.export.enabled=false
management.prometheus.metrics.export.enabled=true