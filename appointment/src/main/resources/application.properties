server.port=${APPOINTMENT_SERVICE_PORT:8080}
#DB:mock|postgres
db.type=${APPOINTMENT_DB_TYPE:postgres}
#postgres
db.postgres.url=${PG_URL:jdbc:postgresql://${APPOINTMENT_PG_HOST:localhost}:${APPOINTMENT_PG_PORT:5432}/omul?currentSchema=${APPOINTMENT_PG_SCHEMA:appointment}}
db.postgres.username=${APPOINTMENT_PG_USER:appointment}
db.postgres.password=${APPOINTMENT_PG_PASS:appointment}
db.postgres.schema=${APPOINTMENT_PG_SCHEMA:appointment}
#flyway
spring.flyway.baselineOnMigrate=true
spring.flyway.locations=db/migration/${db.type}
#spring-doc
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.show-actuator=true
#security
security.enabled=${APPOINTMENT_JWT_ENABLED:true}
security.signing.key=${APPOINTMENT_JWT_SIGNING_KEY:oRuNpRUHPBjfYuWYlaaKtm/YTmF9IOMwVJFlIfNPuls=}
#transport(sync|async)
transport.type=${APPOINTMENT_TRANSPORT_TYPE:async}
#external DAO (mock|rest|kafka)
transport.customer.type=${APPOINTMENT_TRANSPORT_CUSTOMER_TYPE:rest}
transport.customer.rest.url=${APPOINTMENT_TRANSPORT_CUSTOMER_URL:http://localhost:8100}
transport.schedule.type=${APPOINTMENT_TRANSPORT_SCHEDULE_TYPE:rest}
transport.schedule.rest.url=${APPOINTMENT_TRANSPORT_SCHEDULE_URL:http://localhost:8101}
#cache (provider inner|redis)
cache.global.enabled=${APPOINTMENT_CACHE_ENABLED:true}
cache.global.provider=${APPOINTMENT_CACHE_PROVIDER:inner}
spring.data.redis.host=${APPOINTMENT_CACHE_HOST:localhost}
spring.data.redis.port=${APPOINTMENT_CACHE_PORT:6379}
#management
management.endpoint.env.show-values=ALWAYS
management.health.redis.enabled=false
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=health,prometheus,metrics,env
management.endpoints.web.base-path=/actuator
management.endpoint.metrics.enabled=true
management.metrics.use-global-registry=false
management.defaults.metrics.export.enabled=false
management.prometheus.metrics.export.enabled=true